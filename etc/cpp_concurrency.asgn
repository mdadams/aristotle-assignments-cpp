################################################################################
# Concurrency
################################################################################

name "Concurrency"

required_files \
  IDENTIFICATION.txt \

whitelisted_files \
  CMakeLists.txt \
  include/ \
  include/ra/ \
  include/ra/queue.hpp \
  include/ra/thread_pool.hpp \
  include/ra/julia_set.hpp \
  app/ \
  app/test_queue.cpp \
  app/test_thread_pool.cpp \
  app/test_julia_set.cpp \
  Assertions.cmake \
  CodeCoverage.cmake \
  Sanitizers.cmake \
  lib \
  lib/thread_pool.cpp \
  README.pdf \

blacklisted_files  *

report_files \
  ${ARI_EXTRAS_DIR}/julia_set.pdf \
  ${ARI_COMMIT_HISTORY_FILE} \
  README.pdf \
  CMakeLists.txt \
  Assertions.cmake \
  CodeCoverage.cmake \
  Sanitizers.cmake \
  include/ra/queue.hpp \
  app/test_queue.cpp \
  include/ra/thread_pool.hpp \
  lib/thread_pool.cpp \
  app/test_thread_pool.cpp \
  include/ra/julia_set.hpp \
  app/test_julia_set.cpp \

#validate ${ARI_ASSIGNMENT_DIR}/../bin/validate_readme ${ARI_DIST_DIR}

student_id_regex '^[Vv][0-9]+$'
course_regex '^(SENG475|ECE596C)$'
section_regex '^[Tt][0-9][0-9]$'
term_regex '^[0-9]{4}-[0-9]{2}$'

packages \
  nonprog \
  tpool_orig \
  tpool_sane \
  tpool_mod \
  tpool_mod_san \
  fractal_orig \
  fractal_sane \
  fractal_mod \
  fractal_mod_san \

################################################################################
# nonprog package
################################################################################

package-nonprog/name \
  "Nonprogramming exercises"

package-nonprog/generate \
  ${ARI_BIN_DIR}/ari_pkgtrans \
  cur_dir ${ARI_DIST_DIR} \
  exists README.pdf \

package-nonprog/build_tool none

################################################################################
# tpool_orig package
################################################################################

package-tpool_orig/name \
  "The code as originally submitted by the student."
package-tpool_orig/optional 0

package-tpool_orig/generate \
  ${ARI_BIN_DIR}/ari_pkgtrans \
  cur_dir ${ARI_SOURCE_DIR} \
  lndir ../../distribution \
  exists include/ra/queue.hpp \
  exists include/ra/thread_pool.hpp \
  exists app/test_queue.cpp \
  exists app/test_thread_pool.cpp \
  cur_dir ${ARI_SOURCE_DIR} \
  src_dir ${ARI_ASSIGNMENT_DIR}/../src/concurrency \
  replace CMakeLists.txt \
  create_or_replace Sanitizers.cmake \
  create_or_replace trivial_queue.cpp,app/test_queue.cpp \
  create_or_replace trivial_thread_pool.cpp,app/test_thread_pool.cpp \

#  exists lib/thread_pool.cpp \

package-tpool_orig/build_tool \
  cmake

# configure
package-tpool_orig/configure_env \
  CXX="g++" CXXFLAGS="-pedantic-errors"

package-tpool_orig/builds test_queue test_thread_pool

# builds

package-tpool_orig/build-test_queue/name \
  "Build the test_queue program."
package-tpool_orig/build-test_queue/optional 0
package-tpool_orig/build-test_queue/depends_on configure

package-tpool_orig/build-test_thread_pool/name \
  "Build the test_thread_pool program."
package-tpool_orig/build-test_thread_pool/optional 0
package-tpool_orig/build-test_thread_pool/depends_on configure

################################################################################
# tpool_sane package
################################################################################

package-tpool_sane/name \
  "Code with modifications to perform API sanity checking."
package-tpool_sane/optional 0

package-tpool_sane/generate \
  ${ARI_BIN_DIR}/ari_pkgtrans \
  cur_dir ${ARI_SOURCE_DIR} \
  lndir ../../distribution \
  exists include/ra/queue.hpp \
  exists include/ra/thread_pool.hpp \
  exists app/test_queue.cpp \
  exists app/test_thread_pool.cpp \
  cur_dir ${ARI_SOURCE_DIR} \
  src_dir ${ARI_ASSIGNMENT_DIR}/../src/concurrency \
  replace CMakeLists.txt \
  create_or_replace Sanitizers.cmake \
  create_or_replace trivial_queue.cpp,app/test_queue.cpp \
  create_or_replace trivial_thread_pool.cpp,app/test_thread_pool.cpp \

#  exists lib/thread_pool.cpp \

package-tpool_sane/build_tool \
  cmake

# configure
package-tpool_sane/configure_env \
  CXX="g++" CXXFLAGS="-pedantic-errors"

package-tpool_sane/builds test_queue test_thread_pool

# builds

package-tpool_sane/build-test_queue/name \
  "Build the (dummy) test_queue program."
package-tpool_sane/build-test_queue/optional 0
package-tpool_sane/build-test_queue/depends_on configure

package-tpool_sane/build-test_thread_pool/name \
  "Build the (dummy) test_thread_pool program."
package-tpool_sane/build-test_thread_pool/optional 0
package-tpool_sane/build-test_thread_pool/depends_on configure

################################################################################
# tpool_mod package
################################################################################

package-tpool_mod/name \
  "The code modified to use the instructor's test code."
package-tpool_mod/optional 1

package-tpool_mod/generate \
  ${ARI_BIN_DIR}/ari_pkgtrans \
  cur_dir ${ARI_SOURCE_DIR} \
  lndir ../../distribution \
  exists include/ra/queue.hpp \
  exists include/ra/thread_pool.hpp \
  exists app/test_queue.cpp \
  exists app/test_thread_pool.cpp \
  src_dir ${ARI_ASSIGNMENT_DIR}/../private/src/common \
  copy test.hpp,app/test.hpp \
  src_dir ${ARI_ASSIGNMENT_DIR}/../src/concurrency \
  replace CMakeLists.txt \
  create_or_replace Sanitizers.cmake \
  src_dir ${ARI_ASSIGNMENT_DIR}/../private/src/concurrency \
  copy demo_queue.cpp,app/demo_queue.cpp \
  copy demo_thread_pool.cpp,app/demo_thread_pool.cpp \

#  exists lib/thread_pool.cpp \

package-tpool_mod/build_tool \
  cmake

# configure
package-tpool_mod/configure_env \
  CXX="g++" CXXFLAGS="-pedantic-errors"

package-tpool_mod/builds test_queue test_thread_pool
package-tpool_mod/tests test_queue test_thread_pool

# builds

package-tpool_mod/build-test_queue/name \
  "Build the test_queue program (with the instructor's test code)."
package-tpool_mod/build-test_queue/targets demo_queue
package-tpool_mod/build-test_queue/executables demo_queue
package-tpool_mod/build-test_queue/depends_on configure

package-tpool_mod/build-test_thread_pool/name \
  "Build the test_thread_pool program (with the instructor's test code)."
package-tpool_mod/build-test_thread_pool/targets demo_thread_pool
package-tpool_mod/build-test_thread_pool/executables demo_thread_pool
package-tpool_mod/build-test_thread_pool/depends_on configure

# tests

package-tpool_mod/test-test_queue/name \
  "Test the test_queue program (with the instructor's test code)."
package-tpool_mod/test-test_queue/depends_on \
  build-test_queue
package-tpool_mod/test-test_queue/test \
  ari_timeout -E \
  ${ARI_ASSIGNMENT_DIR}/../private/bin/concurrency-queue-test \
  ${ARI_DERIVED_DIR}/demo_queue
package-tpool_mod/test-test_queue/test_sandbox 0

package-tpool_mod/test-test_thread_pool/name \
  "Test the test_thread_pool program (with the instructor's test code)."
package-tpool_mod/test-test_thread_pool/depends_on build-test_thread_pool
package-tpool_mod/test-test_thread_pool/test \
  ari_timeout -E \
  ${ARI_ASSIGNMENT_DIR}/../private/bin/concurrency-thread_pool-test \
  ${ARI_DERIVED_DIR}/demo_thread_pool
package-tpool_mod/test-test_thread_pool/test_sandbox 0

################################################################################
# tpool_mod_san package (with sanitizers)
################################################################################

package-tpool_mod_san/name \
  "The code modified to use the instructor's test code (with sanitizers)."
package-tpool_mod_san/optional 1

package-tpool_mod_san/generate \
  ${ARI_BIN_DIR}/ari_pkgtrans \
  cur_dir ${ARI_SOURCE_DIR} \
  lndir ../../distribution \
  exists include/ra/queue.hpp \
  exists include/ra/thread_pool.hpp \
  exists app/test_queue.cpp \
  exists app/test_thread_pool.cpp \
  src_dir ${ARI_ASSIGNMENT_DIR}/../private/src/common \
  copy test.hpp,app/test.hpp \
  src_dir ${ARI_ASSIGNMENT_DIR}/../src/concurrency \
  replace CMakeLists.txt \
  create_or_replace Sanitizers.cmake \
  src_dir ${ARI_ASSIGNMENT_DIR}/../private/src/concurrency \
  copy demo_queue.cpp,app/demo_queue.cpp \
  copy demo_thread_pool.cpp,app/demo_thread_pool.cpp \

#  exists lib/thread_pool.cpp \

package-tpool_mod_san/build_tool \
  cmake

package-tpool_mod_san/builds test_queue test_thread_pool
package-tpool_mod_san/tests test_queue test_thread_pool

# configure
package-tpool_mod_san/configure_env \
  CXX="g++" CXXFLAGS="-pedantic-errors -fsanitize=thread"

# builds

package-tpool_mod_san/build-test_queue/name \
  "Build the test_queue program (with the instructor's test code)."
package-tpool_mod_san/build-test_queue/targets demo_queue
package-tpool_mod_san/build-test_queue/executables demo_queue
package-tpool_mod_san/build-test_queue/depends_on configure

package-tpool_mod_san/build-test_thread_pool/name \
  "Build the test_thread_pool program (with the instructor's test code)."
package-tpool_mod_san/build-test_thread_pool/targets demo_thread_pool
package-tpool_mod_san/build-test_thread_pool/executables demo_thread_pool
package-tpool_mod_san/build-test_thread_pool/depends_on configure

# tests

package-tpool_mod_san/test-test_queue/name \
  "Test the test_queue program (with the instructor's test code)."
package-tpool_mod_san/test-test_queue/depends_on build-test_queue
package-tpool_mod_san/test-test_queue/test \
  ari_timeout -E \
  ${ARI_ASSIGNMENT_DIR}/../private/bin/concurrency-queue-test \
  ${ARI_DERIVED_DIR}/demo_queue
package-tpool_mod_san/test-test_queue/test_sandbox 0

package-tpool_mod_san/test-test_thread_pool/name \
  "Test the test_thread_pool program (with the instructor's test code)."
package-tpool_mod_san/test-test_thread_pool/depends_on \
  build-test_thread_pool
package-tpool_mod_san/test-test_thread_pool/test \
  ari_timeout -E \
  ${ARI_ASSIGNMENT_DIR}/../private/bin/concurrency-thread_pool-test \
  ${ARI_DERIVED_DIR}/demo_thread_pool
package-tpool_mod_san/test-test_thread_pool/test_sandbox 0

################################################################################
# fractal_orig package
################################################################################

package-fractal_orig/name \
  "The code as originally submitted by the student."
package-fractal_orig/optional 0

package-fractal_orig/generate \
  ${ARI_BIN_DIR}/ari_pkgtrans \
  cur_dir ${ARI_SOURCE_DIR} \
  lndir ../../distribution \
  exists include/ra/queue.hpp \
  exists include/ra/thread_pool.hpp \
  exists app/test_queue.cpp \
  exists app/test_thread_pool.cpp \
  exists include/ra/julia_set.hpp \
  exists app/test_julia_set.cpp \
  cur_dir ${ARI_SOURCE_DIR} \
  src_dir ${ARI_ASSIGNMENT_DIR}/../src/concurrency \
  replace CMakeLists.txt \
  create_or_replace Sanitizers.cmake \
  create_or_replace trivial_julia_set.cpp,app/test_julia_set.cpp \

#  exists lib/thread_pool.cpp \

package-fractal_orig/build_tool \
  cmake

# configure
package-fractal_orig/configure_env \
  CXX="g++" CXXFLAGS="-pedantic-errors"

package-fractal_orig/builds test_julia_set

# builds

package-fractal_orig/build-test_julia_set/name \
  "Build the test_julia_set program."
package-fractal_orig/build-test_julia_set/optional 0
package-fractal_orig/build-test_julia_set/depends_on configure

################################################################################
# fractal_sane package
################################################################################

package-fractal_sane/name \
  "Code with modifications to perform API sanity checking."
package-fractal_sane/optional 0

package-fractal_sane/generate \
  ${ARI_BIN_DIR}/ari_pkgtrans \
  cur_dir ${ARI_SOURCE_DIR} \
  lndir ../../distribution \
  exists include/ra/queue.hpp \
  exists include/ra/thread_pool.hpp \
  exists app/test_queue.cpp \
  exists app/test_thread_pool.cpp \
  exists include/ra/julia_set.hpp \
  exists app/test_julia_set.cpp \
  cur_dir ${ARI_SOURCE_DIR} \
  src_dir ${ARI_ASSIGNMENT_DIR}/../src/concurrency \
  replace CMakeLists.txt \
  create_or_replace Sanitizers.cmake \
  create_or_replace trivial_julia_set.cpp,app/test_julia_set.cpp \

#  exists lib/thread_pool.cpp \

package-fractal_sane/build_tool \
  cmake

# configure
package-fractal_sane/configure_env \
  CXX="g++" CXXFLAGS="-pedantic-errors"

package-fractal_sane/builds test_julia_set

# builds

package-fractal_sane/build-test_julia_set/name \
  "Build the (dummy) test_julia_set program."
package-fractal_sane/build-test_julia_set/optional 0
package-fractal_sane/build-test_julia_set/depends_on configure

################################################################################
# fractal_mod package
################################################################################

package-fractal_mod/name \
  "The code modified to use the instructor's test code."
package-fractal_mod/optional 1

package-fractal_mod/generate \
  ${ARI_BIN_DIR}/ari_pkgtrans \
  cur_dir ${ARI_SOURCE_DIR} \
  lndir ../../distribution \
  exists include/ra/queue.hpp \
  exists include/ra/thread_pool.hpp \
  exists app/test_queue.cpp \
  exists app/test_thread_pool.cpp \
  exists include/ra/julia_set.hpp \
  exists app/test_julia_set.cpp \
  src_dir ${ARI_ASSIGNMENT_DIR}/../private/src/common \
  copy test.hpp,app/test.hpp \
  src_dir ${ARI_ASSIGNMENT_DIR}/../src/concurrency \
  replace CMakeLists.txt \
  create_or_replace Sanitizers.cmake \
  src_dir ${ARI_ASSIGNMENT_DIR}/../private/src/concurrency \
  copy demo_julia_set.cpp,app/demo_julia_set.cpp \

#  exists lib/thread_pool.cpp \

package-fractal_mod/build_tool \
  cmake

# configure
package-fractal_mod/configure_env \
  CXX="g++" CXXFLAGS="-pedantic-errors"

package-fractal_mod/builds test_julia_set
package-fractal_mod/tests test_julia_set

# builds

package-fractal_mod/build-test_julia_set/name \
  "Build the test_julia_set program (with the instructor's test code)."
package-fractal_mod/build-test_julia_set/targets demo_julia_set
package-fractal_mod/build-test_julia_set/executables demo_julia_set
package-fractal_mod/build-test_julia_set/depends_on configure

# tests

package-fractal_mod/test-test_julia_set/name \
  "Test the test_julia_set program (with the instructor's test code)."
package-fractal_mod/test-test_julia_set/optional 0
package-fractal_mod/test-test_julia_set/depends_on build-test_julia_set
package-fractal_mod/test-test_julia_set/test \
  ari_timeout -E \
  ${ARI_ASSIGNMENT_DIR}/../private/bin/concurrency-julia_set-test \
  ${ARI_DERIVED_DIR}/demo_julia_set
package-fractal_mod/test-test_julia_set/test_sandbox 0
#package-fractal_mod/test-test_julia_set/timeout 15

################################################################################
# fractal_mod_san package (with sanitizers)
################################################################################

package-fractal_mod_san/name \
  "The code modified to use the instructor's test code (with sanitizers)."
package-fractal_mod_san/optional 1

package-fractal_mod_san/generate \
  ${ARI_BIN_DIR}/ari_pkgtrans \
  cur_dir ${ARI_SOURCE_DIR} \
  lndir ../../distribution \
  exists include/ra/queue.hpp \
  exists include/ra/thread_pool.hpp \
  exists app/test_queue.cpp \
  exists app/test_thread_pool.cpp \
  exists include/ra/julia_set.hpp \
  exists app/test_julia_set.cpp \
  src_dir ${ARI_ASSIGNMENT_DIR}/../private/src/common \
  copy test.hpp,app/test.hpp \
  src_dir ${ARI_ASSIGNMENT_DIR}/../src/concurrency \
  replace CMakeLists.txt \
  create_or_replace Sanitizers.cmake \
  src_dir ${ARI_ASSIGNMENT_DIR}/../private/src/concurrency \
  copy demo_julia_set.cpp,app/demo_julia_set.cpp \

#  exists lib/thread_pool.cpp \

package-fractal_mod_san/build_tool \
  cmake

# configure
package-fractal_mod_san/configure_env \
  CXX="g++" CXXFLAGS="-pedantic-errors -fsanitize=thread"

package-fractal_mod_san/builds test_julia_set
package-fractal_mod_san/tests test_julia_set

# builds

package-fractal_mod_san/build-test_julia_set/name \
  "Build the test_julia_set program (with the instructor's test code)."
package-fractal_mod_san/build-test_julia_set/targets demo_julia_set
package-fractal_mod_san/build-test_julia_set/executables demo_julia_set
package-fractal_mod_san/build-test_julia_set/depends_on configure

# tests

package-fractal_mod_san/test-test_julia_set/name \
  "Test the test_julia_set program (with the instructor's test code)."
package-fractal_mod_san/test-test_julia_set/optional 0
package-fractal_mod_san/test-test_julia_set/depends_on build-test_julia_set
package-fractal_mod_san/test-test_julia_set/test \
  ari_timeout -E \
  ${ARI_ASSIGNMENT_DIR}/../private/bin/concurrency-julia_set-test \
  ${ARI_DERIVED_DIR}/demo_julia_set
package-fractal_mod_san/test-test_julia_set/test_sandbox 0
